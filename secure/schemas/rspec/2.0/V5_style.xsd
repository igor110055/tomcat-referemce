<?xml version="1.0" encoding="UTF-8"?>
<!--
 Licensed Materials - Property of IBM
 IBM Cognos Products: rspec
 (C) Copyright IBM Corp. 2003, 2014
 US Government Users Restricted Rights - Use, duplication or disclosure restricted by GSA ADP Schedule Contract with IBM Corp.
--> 
<!--
    Copyright (C) 2008 Cognos ULC, an IBM Company. All rights reserved.
    Cognos (R) is a trademark of Cognos ULC, (formerly Cognos Incorporated).
-->
<xs:schema elementFormDefault="qualified" attributeFormDefault="unqualified" xmlns:xs="http://www.w3.org/2001/XMLSchema">
	<xs:include schemaLocation="V5_format.xsd"/>
	<xs:element name="style" type="StyleType">
		<xs:annotation>
			<xs:documentation>Describes the CSS styling and/or data formatting of an object.
 Data formatting applies individually to all elements contained within that can support a format.</xs:documentation>
			<xs:documentation/>
		</xs:annotation>
	</xs:element>
	<xs:element name="conditionalStyles">
		<xs:annotation>
			<xs:documentation>Contains a list of conditional styles. When rendering, the variable pointed to by refVariable in conditoinalStyleCases will be eveluated and the first conditionalStyle whose refVariableValue matches the value of the expression will be applied. If no match is found, then the conditionalStyleDefault element will be applied. </xs:documentation>
			<xs:documentation>The condition described by the refVariable attribute is executed. The resulting value is then used to pick a single style using the refVariableValue attribute of the contained style elements. If no match is found, then the style that does not contain a refVariableValue is returned.</xs:documentation>
		</xs:annotation>
		<xs:complexType>
			<xs:all>
				<xs:element name="conditionalStyleCases">
					<xs:complexType>
						<xs:sequence>
							<xs:element name="conditionalStyle" maxOccurs="unbounded">
								<xs:complexType>
									<xs:complexContent>
										<xs:extension base="StyleType">
											<xs:attributeGroup ref="ConditionalPartAttributes"/>
										</xs:extension>
									</xs:complexContent>
								</xs:complexType>
							</xs:element>
						</xs:sequence>
						<xs:attributeGroup ref="ConditionalOwnerAttributes"/>
					</xs:complexType>
				</xs:element>
				<xs:element name="conditionalStyleDefault" type="StyleType"/>
			</xs:all>
		</xs:complexType>
	</xs:element>
	<xs:element name="CSS">
		<xs:annotation>
			<xs:documentation>Describes the CSS style portion.</xs:documentation>
		</xs:annotation>
		<xs:complexType>
			<xs:attribute name="value" type="xs:string" use="required">
				<xs:annotation>
					<xs:documentation source="doc_att_value_style"/>
					<xs:documentation source="http://www.w3.org/TR/CSS2/colors.html#propdef-background-color">
						<xs:annotation/>background-color. Sets the background color for the selected object.</xs:documentation>
					<xs:documentation source="http://www.w3.org/TR/CSS2/colors.html#propdef-background-color">
						<xs:annotation/>background-color. Sets the background color for the selected object. Enter the name of the color, the RBG value, or the number of the web-safe color. For example, enter "background-color:lime;" or "background-color:#00FF00;" to use the web-safe lime. </xs:documentation>
					<xs:documentation source="http://www.w3.org/TR/CSS2/colors.html#propdef-background-image">
						<xs:annotation/>background-image. Sets an image as the background. Enter the url where the image is located. The background color in the report will be visible in the transparent parts of the image.</xs:documentation>
					<xs:documentation source="http://www.w3.org/TR/CSS2/box.html#propdef-border">
						<xs:annotation/>border. Sets all the properties for the four borders. You can set the width, style, and color in one declaration.</xs:documentation>
					<xs:documentation source="http://www.w3.org/TR/CSS2/visuren.html#propdef-display">
						<xs:annotation/>display. Specifies the type of box to generate.</xs:documentation>
					<xs:documentation source="http://www.w3.org/TR/CSS2/visuren.html#propdef-display">
						<xs:annotation/>display. Specifies the type of box to generate. For example, "display:block;" generates a principal block box.</xs:documentation>
					<xs:documentation source="http://www.w3.org/TR/CSS2/visuren.html#propdef-float">
						<xs:annotation/>float. Sets where an image or text will appear.</xs:documentation>
					<xs:documentation source="http://www.w3.org/TR/CSS2/visuren.html#propdef-float">
						<xs:annotation/>float. Sets where an image or text will appear. For example, specifying "float:left;" for an image with text next to the image will result in the text flowing around and to the right of the image. </xs:documentation>
					<xs:documentation source="http://www.w3.org/TR/CSS2/visudet.html#propdef-height">
						<xs:annotation/>height. Sets the height of an object. Enter a number or percentage. The possible units of measure for numbers are: em for the font-size of the font, ex for the x-height of the font, px for pixels, in for inches, cm for centimeters, mm for millimeters, pt for points, and pc for picas. You cannot use negative numbers.</xs:documentation>
					<xs:documentation source="http://www.w3.org/TR/CSS2/visudet.html#propdef-line-height">
						<xs:annotation/>line-height. Sets the distance between lines. Enter a number, length, or percentage. For example, the number of 1.2, the length of 1.2em, and 120% all result in the same line height. You cannot use negative numbers. If you enter a number without specifying a unit of measure, the font size will be multiplied by the number you enter.</xs:documentation>
					<xs:documentation source="http://www.w3.org/TR/CSS2/visudet.html#propdef-width">
						<xs:annotation/>width. Sets the width of an object. Enter the length or percentage. For example, 100px sets the object to be 100 pixels wide. You cannot use negative numbers.</xs:documentation>
					<xs:documentation source="http://www.w3.org/TR/CSS2/fonts.html#propdef-font">
						<xs:annotation/>font. Sets all the font properties for the selected object.</xs:documentation>
					<xs:documentation source="http://www.w3.org/TR/CSS2/fonts.html#propdef-font">
						<xs:annotation/>font. Sets all the font properties for the selected object. You can set the font-family, font-size, font-style, font-weight, text-decoration, and color in one declaration.</xs:documentation>
					<xs:documentation source="http://www.w3.org/TR/CSS2/box.html#propdef-margin">
						<xs:annotation/>margin. Sets all the margin properties for the selected object.</xs:documentation>
					<xs:documentation source="http://www.w3.org/TR/CSS2/box.html#propdef-margin">
						<xs:annotation/>margin. Sets all the margin properties for the selected object. To use the same margin all around the selected object, enter "margin:nn;" where nn is the number. To use different margins around the object, you must specify margin-top, margin-left, and so on. </xs:documentation>
					<xs:documentation source="http://www.w3.org/TR/CSS2/box.html#propdef-padding">
						<xs:annotation/>padding. Sets all the padding properties for the selected object.</xs:documentation>
					<xs:documentation source="http://www.w3.org/TR/CSS2/box.html#propdef-padding">
						<xs:annotation/>padding. Sets all the padding properties for the selected object. Enter the numbers in this order: top, right, bottom, left. For example, "padding:10px 15px 10px 15px;" will put 10 pixels of padding at the top and bottom of the object and 15 pixels at the right and left.</xs:documentation>
					<xs:documentation source="http://www.w3.org/TR/CSS2/visufx.html#propdef-overflow">
						<xs:annotation/>overflow. Specifies what happens if the content of an object overflows its area.</xs:documentation>
					<xs:documentation source="http://www.w3.org/TR/CSS2/visudet.html#propdef-vertical-align">
						<xs:annotation/>vertical-align. Sets the vertical alignment of the selected object.</xs:documentation>
					<xs:documentation source="http://www.w3.org/TR/CSS2/visudet.html#propdef-vertical-align">
						<xs:annotation/>vertical-align. Sets the vertical alignment of a selected object. For example, "vertical-align:middle;" will align the vertical midpoint of the selected object with the baseline of the parent object plus half the x-height of the parent object.</xs:documentation>
					<xs:documentation source="http://www.w3.org/TR/CSS2/tables.html#collapsing-borders">
						<xs:annotation/>border-collapse. Sets a border to collapse, separate, or inherit. Use "border-collapse:collapse;" to have borders around the entire table. Use "border-collapse:separate;" to have borders around individual cells in the table. Use "border-collapse:inherit;" to have the same borders as the parent object.</xs:documentation>
					<xs:documentation source="http://www.w3.org/TR/CSS2/tables.html#borders">
						<xs:annotation/>border-spacing. Sets the distance between the borders of adjacent cells of a table. This property is used only when you set the border-collapse property to separate.</xs:documentation>
					<xs:documentation source="http://www.w3.org/TR/CSS2/tables.html#propdef-empty-cells">
						<xs:annotation/>empty-cells. Specifies whether cells with no visible content should have borders or not. This property is used only when you set the border-collapse property to separate.</xs:documentation>
					<xs:documentation source="http://www.w3.org/TR/CSS2/tables.html#width-layout">
						<xs:annotation/>table-layout. Sets the algorithm used to lay out table cells, rows, and columns.</xs:documentation>
					<xs:documentation source="http://www.w3schools.com/css/pr_text_color.asp">
						<xs:annotation/>color. Sets the color of text.</xs:documentation>
					<xs:documentation source="http://www.w3schools.com/css/pr_text_color.asp">
						<xs:annotation/>color. Sets the color of text. Enter the name of the color, the RBG value, or the number of the web-safe color. For example, enter "background-color:lime;" or "background-color:0,255,0 ;"or "background-color:#00FF00;" to use the web-safe lime.</xs:documentation>
					<xs:documentation source="http://www.w3.org/TR/CSS2/visuren.html#propdef-direction">
						<xs:annotation/>direction. Sets the direction of text when using the Unicode bidirectional (bidi) algorithm. Values are ltr (left-to-right) and rtl (right-to-left). Use with the unicode-bidi property. Note: For the direction property to have any effect on inline-level objects, the unicode-bidi property must be set to embed or override. </xs:documentation>
					<xs:documentation source="http://www.w3.org/TR/CSS2/text.html#propdef-letter-spacing">
						<xs:annotation/>letter-spacing. Increases or decreases the space between characters.</xs:documentation>
					<xs:documentation source="http://www.w3.org/TR/CSS2/text.html#propdef-text-align">
						<xs:annotation/>text-align. Specifies how the contents of the cells of a table column will be aligned. This property is called Horizontal Align in Report Studio.</xs:documentation>
					<xs:documentation source="http://www.w3.org/TR/CSS2/text.html#propdef-text-indent">
						<xs:annotation/>text-indent. Specifies the indentation for the first line of text in a table. The possible units of measure are: em for the font-size of the font, ex for the x-height of the font, and px for pixels.</xs:documentation>
					<xs:documentation source="http://www.w3.org/TR/CSS2/visuren.html#propdef-unicode-bidi">
						<xs:annotation/>unicode-bidi. Sets the level of embedding for the Unicode bidirectional algorithm. Use with the direction property. Note: Because the Unicode algorithm has a limit of 15 levels of embedding, do not use a value other than normal unless appropriate. In particular, a value of inherit should be used with extreme caution. </xs:documentation>
					<xs:documentation source="http://www.w3.org/TR/CSS2/text.html#propdef-white-space">
						<xs:annotation/>white-space. Increases or decreases the space between words.</xs:documentation>
				</xs:annotation>
			</xs:attribute>
		</xs:complexType>
	</xs:element>
	<xs:element name="dataFormat">
		<xs:complexType>
			<xs:choice>
				<xs:element ref="numberFormat"/>
				<xs:element ref="percentFormat"/>
				<xs:element ref="currencyFormat"/>
				<xs:element ref="stringFormat"/>
				<xs:element ref="dateFormat"/>
				<xs:element ref="dateTimeFormat"/>
				<xs:element ref="timeFormat"/>
				<xs:element ref="intervalFormat"/>
				<xs:element ref="format"/>
			</xs:choice>
		</xs:complexType>
	</xs:element>
	<xs:attributeGroup name="ConditionalPartAttributes">
		<xs:attribute name="refVariableValue" type="xs:string" use="required"/>
	</xs:attributeGroup>
	<xs:attributeGroup name="ConditionalOwnerAttributes">
		<xs:attribute name="refVariable" type="xs:string" use="required"/>
	</xs:attributeGroup>
	<xs:complexType name="StyleType">
		<xs:all>
			<xs:element ref="CSS" minOccurs="0"/>
			<xs:element ref="dataFormat" minOccurs="0"/>
		</xs:all>
	</xs:complexType>
</xs:schema>
